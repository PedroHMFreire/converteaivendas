// Script de teste direto do authService
// Execute este script no console do navegador

console.log("üß™ Teste Direto do authService...");

// 1. Testar getCurrentPlan diretamente
console.log("1. Testando getCurrentPlan...");
if (window.authService && typeof window.authService.getCurrentPlan === 'function') {
  window.authService.getCurrentPlan().then(function(plan) {
    console.log("   ‚úÖ getCurrentPlan retornou:", plan);
    console.log("   üìä An√°lise:", {
      isTrial: plan === 'trial',
      isBasic: plan === 'basic',
      isPremium: plan === 'premium',
      isUnknown: plan === 'unknown',
      expectedForMonthly: plan === 'basic'
    });
  }).catch(function(error) {
    console.log("   ‚ùå Erro em getCurrentPlan:", error);
  });
} else {
  console.log("   ‚ùå getCurrentPlan n√£o dispon√≠vel");
}

// 2. Testar getTrialDaysLeft diretamente
console.log("2. Testando getTrialDaysLeft...");
if (window.authService && typeof window.authService.getTrialDaysLeft === 'function') {
  window.authService.getTrialDaysLeft().then(function(days) {
    console.log("   ‚úÖ getTrialDaysLeft retornou:", days);
    console.log("   üìä An√°lise:", {
      daysValue: days,
      isNumber: typeof days === 'number',
      isExpired: days <= 0,
      isValid: days > 0
    });
  }).catch(function(error) {
    console.log("   ‚ùå Erro em getTrialDaysLeft:", error);
  });
} else {
  console.log("   ‚ùå getTrialDaysLeft n√£o dispon√≠vel");
}

// 3. Testar getCurrentUser
console.log("3. Testando getCurrentUser...");
if (window.authService && typeof window.authService.getCurrentUser === 'function') {
  window.authService.getCurrentUser().then(function(user) {
    console.log("   ‚úÖ getCurrentUser retornou:", {
      id: user?.id,
      email: user?.email,
      plano: user?.plano,
      dataExpiracao: user?.dataExpiracao
    });
  }).catch(function(error) {
    console.log("   ‚ùå Erro em getCurrentUser:", error);
  });
} else {
  console.log("   ‚ùå getCurrentUser n√£o dispon√≠vel");
}

// 4. Simula√ß√£o da l√≥gica do AuthGuard
console.log("4. Simulando l√≥gica do AuthGuard...");
setTimeout(function() {
  if (window.authService) {
    Promise.all([
      window.authService.getCurrentPlan(),
      window.authService.getTrialDaysLeft()
    ]).then(function(results) {
      var plan = results[0];
      var daysLeft = results[1];

      var shouldRedirect = plan === "trial" && typeof daysLeft === "number" && daysLeft <= 0;

      console.log("   üìä Simula√ß√£o AuthGuard:", {
        plan: plan,
        daysLeft: daysLeft,
        shouldRedirect: shouldRedirect,
        condition1: plan === "trial",
        condition2: typeof daysLeft === "number",
        condition3: daysLeft <= 0,
        expectedBehavior: plan === 'basic' ? 'should NOT redirect' : 'check conditions'
      });
    }).catch(function(error) {
      console.log("   ‚ùå Erro na simula√ß√£o:", error);
    });
  }
}, 1000);

console.log("üß™ Teste conclu√≠do. Aguarde os resultados...");
